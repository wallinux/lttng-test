From 98d0c15b5a7e29c1504d4ea45f6031b72dcda82d Mon Sep 17 00:00:00 2001
From: Liguang Li <liguang.li@windriver.com>
Date: Thu, 22 Jun 2017 14:33:54 +0800
Subject: [PATCH] UST create channel failed

Issue: LINCCM-1276 

This patch fixes a bug which was introduced by:
1ff31389b273b ("Generate and export the sequence number")

Expand the shmobj size for the sequence number, this allows the
viewer to identify the gaps between trace packets.

Signed-off-by: Liguang Li <liguang.li@windriver.com>
---
 libringbuffer/ring_buffer_backend.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/libringbuffer/ring_buffer_backend.c b/libringbuffer/ring_buffer_backend.c
index 961f118..2a181ef 100644
--- a/libringbuffer/ring_buffer_backend.c
+++ b/libringbuffer/ring_buffer_backend.c
@@ -118,7 +118,7 @@ int lib_ring_buffer_backend_allocate(const struct lttng_ust_lib_ring_buffer_conf
 		bufb->buf_rsb.id = subbuffer_id(config, 0, 1, 0);
 
 	/* Allocate subbuffer packet counter table */
-	align_shm(shmobj, __alignof__(struct lttng_ust_lib_ring_buffer_backend_subbuffer));
+	align_shm(shmobj, __alignof__(struct lttng_ust_lib_ring_buffer_backend_counts));
 	set_shmp(bufb->buf_cnt, zalloc_shm(shmobj,
 				sizeof(struct lttng_ust_lib_ring_buffer_backend_counts)
 				* num_subbuf));
@@ -333,6 +333,8 @@ int channel_backend_init(struct channel_backend *chanb,
 	shmsize += sizeof(struct lttng_ust_lib_ring_buffer_backend_pages) * num_subbuf_alloc;
 	shmsize += offset_align(shmsize, __alignof__(struct lttng_ust_lib_ring_buffer_backend_subbuffer));
 	shmsize += sizeof(struct lttng_ust_lib_ring_buffer_backend_subbuffer) * num_subbuf;
+	shmsize += offset_align(shmsize, __alignof__(struct lttng_ust_lib_ring_buffer_backend_counts));
+	shmsize += sizeof(struct lttng_ust_lib_ring_buffer_backend_counts) * num_subbuf;
 	/* Per-cpu buffer size: control (after backend) */
 	shmsize += offset_align(shmsize, __alignof__(struct commit_counters_hot));
 	shmsize += sizeof(struct commit_counters_hot) * num_subbuf;
-- 
1.9.1

