From cfac0c4919c0edc972e241fbf703d7fcf343f009 Mon Sep 17 00:00:00 2001
Message-Id: <cfac0c4919c0edc972e241fbf703d7fcf343f009.1477397612.git.anders.wallin@windriver.com>
From: Anders Wallin <anders.wallin@windriver.com>
Date: Wed, 13 Jul 2016 16:41:16 +0200
Subject: [PATCH 1/1] Added AARCH64 support to the clock plugin

Signed-off-by: Anders Wallin <anders.wallin@windriver.com>
---
 liblttng-ust-arm-cntpct-clock/lttng-ust-arm-cntpct-clock.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/liblttng-ust-arm-cntpct-clock/lttng-ust-arm-cntpct-clock.c b/liblttng-ust-arm-cntpct-clock/lttng-ust-arm-cntpct-clock.c
index 6b8420a..f96df8a 100644
--- a/liblttng-ust-arm-cntpct-clock/lttng-ust-arm-cntpct-clock.c
+++ b/liblttng-ust-arm-cntpct-clock/lttng-ust-arm-cntpct-clock.c
@@ -31,8 +31,8 @@
 
 static uint64_t arm_cntpct_read64(void)
 {
-#ifdef __arm__
 	uint64_t tmp;
+#ifdef __arm__
 	unsigned long cvall, cvalh;
 
 	asm volatile("mrrc p15, 0, %0, %1, c14" :
@@ -44,8 +44,11 @@ static uint64_t arm_cntpct_read64(void)
 	tmp += ((uint64_t)cvall * 1000) >> 8;
 
 	return tmp;
+#elif defined(__aarch64__)
+	asm volatile("mrs %0, cntpct_el0" : "=r" (tmp));
+	return tmp;
 #else
-	#warning ARM cntpct is only usable for ARM arch
+	#warning ARM cntpct is only used for ARM or AARCH64 arch
 	return -1;
 #endif
 }
-- 
2.10.1

